[global]
aliases=192.168.177.22
transports=sip:192.168.177.22:5060;maddr=172.20.0.2
log-level=debug

[module::MediaRelay]
enabled=false

[module::Authentication]
enabled=true

available-algorithms=MD5

auth-domains=192.168.177.22

db-implementation=file
file-path=/etc/flexisip/userdb

[module::Registrar]
enabled=true
reg-domains=192.168.177.22

##
## This module performs push notifications to mobile phone notification
## systems: apple, android, as well as a generic http get/post to
## a custom server to which actual sending of the notification is
## delegated. The push notification is sent when an INVITE or MESSAGE
## request is not answered by the destination of the request within
## a certain period of time, configurable hereunder by 'timeout'
## parameter. The PushNotification has an implicit dependency on
## the Router module, which is in charge of creating the incoming
## and outgoing transactions and the context associated with the
## request forking process. No push notification can hence be sent
## if the Router module isn't activated. The time-to-live of the
## push notification depends on event for which the push notification
## is generated.  - if it is for a call (INVITE), it will be set
## equal 'call-fork-timeout' property of the Router module, which
## corresponds to the maximum time for a call attempt.
##  - if it is for an IM (MESSAGE or INVITE for a text session),
##    then it will be set equal to the 'message-time-to-live' property.
##
[module::PushNotification]

# Indicate whether the module is activated.
# Default: false
enabled=true

# A request/response enters module if the boolean filter evaluates
# to true. Ex: from.uri.domain contains 'sip.linphone.org', from.uri.domain
# in 'a.org b.org c.org', (to.uri.domain in 'a.org b.org c.org')
# && (user-agent == 'Linphone v2'). You can consult the full filter
# documentation here : https://wiki.linphone.org/xwiki/wiki/public/view/Flexisip/Configuration/Filter%20syntax/
# Default: 
#filter=

# Time to wait before sending a push notification to device. A value
# lesser or equal to zero will make the push notification to be
# sent immediately, which is recommended since most of the time
# devices can't have a permanent connection with the Flexisip server.
# Default: 0
# Default unit: second
timeout=1

# Time to live for the push notifications related to IM messages.
# The default value '0' is interpreted as using the same value as
# for message-delivery-timeout of Router module.
# Default: 0
# Default unit: second
#message-time-to-live=0

# Maximum number of notifications queued for each push notification
# service
# Default: 100
#max-queue-size=100

# Number of push notification request retransmissions sent to a
# client for a same event (call or message). Retransmissions cease
# when a response is received from the client. Setting a value of
# zero disables retransmissions.
# Default: 0
#retransmission-count=0

# Retransmission interval for push notification requests, when a
# retransmission-count has been specified above.
# Default: 5
# Default unit: second
#retransmission-interval=5

# Default interval between to subsequent PNs when remote push notifications
# are used to notify a call invite to a clients that haven't published
# any token for VoIP and background push notifications. In that
# case, several PNs are sent subsequently until the call is picked
# up, declined or canceled. This parameter can be overridden by
# the client by using the 'pn-call-remote-push-interval' push parameter.
# A value of zero will cause the deactivation of push notification
# repetitions and the sending of thefinal notification. Thus, only
# the first push notification will be sent.
# The value must be in [0;30]
# Default: 0
# Default unit: second
#call-remote-push-interval=0

# If true, the following key in the payload of the push request
# will be set:
#  * 'from-uri': the SIP URI of the caller or the message sender.
#  * 'display-name': the display name of the caller or the message
#    sender.
#  * 'loc-args': the display name if not empty or the SIP URI instead.
# 
# If false, the keys will be set but as empty.
# Default: false
#display-from-uri=false

# Enable push notification for apple devices
# Default: true
#apple=true

# Path to directory where to find Apple Push Notification service
# certificates. They should bear the appid of the application, suffixed
# by the release mode and .pem extension. For example: org.linphone.dev.pem
# org.linphone.prod.pem com.somephone.dev.pem etc... The files should
# be .pem format, and made of certificate followed by private key.
# This is also the path to the directory where to find Voice Over
# IP certificates (certicates to use PushKit). They should bear
# the appid of the application, suffixed by the release mode and
# .pem extension, and made of certificate followed by private key.
# For example: org.linphone.voip.dev.pem org.linphone.voip.prod.pem
# com.somephone.voip.dev.pem etc...
# Default: /etc/flexisip/apn
#apple-certificate-dir=/etc/flexisip/apn

# Set the badge value to 0 for Apple push
# Default: false
#no-badge=false

# Enable push notification for Android devices.
# Default: true
#firebase=true

# List of pairs of <Firebase Project Number>:<Firebase Cloud Messaging
# API (Legacy) Server Key> for each Android project that supports
# push notifications.
# Default: 
#firebase-projects-api-keys=

# List of pairs of <Firebase Project Number>:<Path to service account
# json file> for each Android project that supports push notifications.
# Default: 
#firebase-service-accounts=

# Represents the time in seconds to execute the access token refresh
# operation just before the current access token expires. This parameter
# is used to control overlapping access token lifetimes.
# Default: 300
#firebase-token-expiration-anticipation-time=300

# Default interval in seconds to execute the access token refresh
# operation in the event that the access token has not been successfully
# obtained.
# Default: 60
#firebase-default-refresh-interval=60

# Instead of having Flexisip sending the push notification directly
# to the Google/Apple/Microsoft push servers, send an http request
# to a server with all required information encoded in the URL,
# to which the actual sending of the push notification is delegated.
# The following arguments can be substituted in the http request
# uri, with the following values:
#  - $type      : apple, google, wp, firebase
#  - $token     : device token
#  - $api-key   : the api key to use (google and firebase only)
#  - $app-id    : application ID
#  - $from-name : the display name in the from header
#  - $from-uri  : the sip uri of the from header
#  - $from-tag  : the tag of the from header 
#  - $to-uri    : the sip uri of the to header
#  - $call-id   : the call-id of the INVITE or MESSAGE request
#  - $event     : call, message
#  - $sound     : the sound file to play with the notification
#  - $msgid     : the message id to put in the notification
#  - $uid       : 
#  
# The content of the text message is put in the body of the http
# request as text/plain, if any.
# Example: http://292.168.0.2/$type/$event?from-uri=$from-uri&tag=$from-tag&callid=$callid&to=$to-uri
# Default: 
#external-push-uri=

# Method for reaching external-push-uri, typically GET or POST
# Default: GET
#external-push-method=GET

# Protocol used for reaching external-push-uri, http2 or http (deprecated)
# Default: http2
#external-push-protocol=http2

# Send service push notification periodically to all devices that
# are about to expire and should wake up to REGISTER back. 0 to
# disable. Recommended value: 30
# Default: 0
# Default unit: minute
#register-wakeup-interval=0

# Start sending wake-up push notifications to contacts when they
# pass that percentage of their lifetime.
# Default: 50
#register-wakeup-threshold=50